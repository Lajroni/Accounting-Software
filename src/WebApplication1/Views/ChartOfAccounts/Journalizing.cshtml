@{
    ViewData["Title"] = "Journalizing";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userInfoJson = Json.Serialize(ViewBag.transactions);
    var journal = Json.Serialize(ViewBag.JournalId);
    var view = Json.Serialize(ViewBag.ViewOnly);
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.2/css/bootstrap-select.min.css">
<style>
    select.selectpicker{
        display: block;
    }


</style>
<h2>Journalizing</h2>
@if (ViewBag.hasID == true)
{
    @if (ViewBag.ViewOnly == true)
    {
        <h4> Viewing Journal ID @ViewBag.JournalId </h4>
        <h4> Posted: @ViewBag.Date.Date.ToString("d") </h4>
    }
    else
    {
        <h4> Editing Journal ID @ViewBag.JournalId</h4>
        <h4> Posted: @ViewBag.Date.Date.ToString("d") </h4>
    }
}
else
{
    <h4> Create new journal</h4>

}


<form asp-action="Journalizing" enctype="multipart/form-data" method="post">
    <div class="form-horizontal">
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-warning"></div>
        <div id="errorholder" class="error" style="display:none">
            <div class="alert alert-warning">
                <strong>Warning!</strong> There are inactive accounts in the chart of accounts. They cannot be used in journalizing until they become active.
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12">
                <div class="col-xs-3 control-label" ></div>
                <div class="col-xs-3"style="display:inline; margin-left:50px; margin-right:20px">
                </div>
                @if (!ViewBag.ViewOnly)
                {
                    <div id="leftSide" style="">
                        <p style="width:120px; display: inline-block;"> Debit </p>
                        <p style="width:120px; display: inline-block;"> Credit </p>
                    </div>
                }

            </div>
        </div>  
        <div class="form-group" style=@(@ViewBag.ViewOnly == true ? "display:none" : "") } >
            <div class="col-md-12">
                <label class="col-xs-3 control-label" style="" for="AvailableAccounts"> Add account: </label>
                <div class="col-xs-3" style="display:inline; margin-left:50px">
                    @Html.DropDownList("Accounts", (IEnumerable<SelectListItem>)ViewBag.AvailableAccounts, "Select account", new { @class = "selectpicker" })
                </div>
                $
                <input type="number" value="0.00" id="DebitInput" class="form-control" style="width: 100px; background-color: #dff0d8; display:inline-block" />
                <p style="margin-left:10px;    display: inline-block;"> $ </p>
                <input type="number" value="0.00" id="CreditInput" class="form-control" style="width: 100px; background-color: #f2dede;display:inline-block" />
                <div id="AddDebit" onclick="Add()" class="btn btn-primary" style="float: right; margin-left:50px"> Add to journal</div>
            </div>
        </div>

        <hr>
        <hr>
        <div class="col-xs-10">
            <div class="col-xs-offset-2">
                <div class="col-xs-12">
                    <b class="col-xs-4 col-xs-offset-5"> Debits</b>
                    <b class="col-xs-3"> Credits</b>
                </div>
            </div>

            <div class="col-xs-offset-1 col-xs-11" style="border: 1px solid black;border-bottom: 0px; padding: 0px 0px;" id="DebitsPart">
            </div>

            <hr />
            <div class="col-xs-offset-1 col-xs-11" style="border: 1px solid black;border-top: 0px; padding: 0px 0px;" id="CreditsPart">
            </div>
        </div>
        <div class="clearfix"></div>
        <hr class="clearfix"> <hr>

        @if (!ViewBag.ViewOnly)
        {
            <div class="form-group">
                <div class="col-md-offset-10 col-md-2">
                    <div id="Journalize" onclick="journalize()" class="btn btn-primary"> Submit </div>
                    <a class="btn btn-primary" href="/chartofaccounts/viewjournals/"> Cancel </a>
                </div>
            </div>
        }
        @{int i = 0;
        @if (ViewBag.Files != null)
            {
                <table border="1">
                    @foreach (var fd in ViewBag.Files)
                    {
                        @if(i == 0)
                        {
                            <tr>
                                <td colspan="2">
                                    <b> Uploaded Documents</b>
                                </td>
                            </tr>

                        }
                        <tr>
                            <td>@fd.Name</td>
                            <td>@Html.ActionLink("Download", "Download", "ChartOfAccounts", new { fileName = fd.Name }, new { target = "_blank" })</td>
                        </tr>
                        i++;
                    }
                </table>
            }    
        }
    </div>
    <input class="hidden" id="CreditsList">
    <input class="hidden" id="DebitsList">
    <input class="hidden" id="CreditsValues">
    <input class="hidden" id="DebitsValues">
</form>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-body">
                <div class="alert alert-success" id="modalAlertSuccess">
                    <strong>Success!</strong> Journalizing transaction completed.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div class="clearfix"></div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script>
            var updating = false;
            var journalId = "";
            var deletedAcc = ""
            window.onload = function(e){
                var View = JSON.parse('@Html.Raw(view)');
                if(JSON.stringify(View).toLowerCase() == "true"){
                    $(".col-xs-1 :contains(Remove)").remove()
                }
            }
            $(document).ready(function() {
                journalId = JSON.parse('@Html.Raw(journal)');
                var success = @((ViewData["Inactive"] != null).ToString().ToLower());
                if (success == true) {
                    $("#errorholder").css("display","block")
                }
                var userInfo = JSON.parse('@Html.Raw(userInfoJson)');
                jQuery.each(userInfo, function(){
                    updating = true;
                        $('#Accounts option:contains(' + this.accountName + ')').attr("selected", "selected")
                        if (this.isDebit)
                    {
                            $("#DebitInput").val(this.value);
                        console.log(this.Value)
                        }
                    else
                    {
                            $("#CreditInput").val(this.value);
                        console.log(2)
                        }
                    Add()
                        $("#CreditInput").val("0.00");
                        $("#DebitInput").val("0.00");
                        $('#Accounts option:contains(' + this.accountName + ')').attr("selected", "false")
                })
                var viewonly = @(ViewData["ViewOnly"].ToString().ToLower());
                if(viewonly == true){
                    $("input").attr("disabled","disabled")
                }
            });
            $('#CreditsPart').on("change", ".creditsin",function(){ 
                var inputs = $(".creditsin");
                $("#CreditsValues").val("")
                for(var i = 0; i < inputs.length; i++){
                    $(inputs[i]).val(  parseFloat($(inputs[i]).val()).toFixed(2))
                    $("#CreditsValues").val( $("#CreditsValues").val()  + "," +  $(inputs[i]).val())
                }
            })

            $('#DebitsPart').on("change", ".debitsin",function(){ 
                var inputs = $(".debitsin");
                $("#DebitsValues").val("")
                for(var i = 0; i < inputs.length; i++){
                    $(inputs[i]).val(  parseFloat($(inputs[i]).val()).toFixed(2))
                    $("#DebitsValues").val( $("#DebitsValues").val()  + "," +  $(inputs[i]).val())
                }
            })

            function Add(){
                var selected = $("#Accounts option:selected").text();
                if (selected == "Select account") {
                    $("#modalAlertSuccess").addClass("alert-danger")
                    $("#modalAlertSuccess").html('<strong>Error!</strong> Select an account.')
                    $('#myModal').modal("show");
                    return;
                }
                var valueDeb = parseFloat($("#DebitInput").val()).toFixed(2);
                var valueCred = parseFloat($("#CreditInput").val()).toFixed(2);
                if(isNaN(valueDeb)){
                    $("#DebitInput").val("0.00")
                    valueDeb = parseFloat($("#DebitInput").val()).toFixed(2);
                }
                if(isNaN(valueCred)){
                    $("#CreditInput").val("0.00")
                    valueCred = parseFloat($("#CreditInput").val()).toFixed(2);
                }
                if(( valueDeb != 0.00) && (valueCred != 0.00)){
                    $("#modalAlertSuccess").addClass("alert-danger")
                    $("#modalAlertSuccess").html('<strong>Error!</strong> One account cannot have value on both sides. One must be 0.00.')
                    $('#myModal').modal("show");
                }
                else if(valueDeb < 0){
                    $("#modalAlertSuccess").addClass("alert-danger")
                    $("#modalAlertSuccess").html('<strong>Error!</strong> Debit value cannot be negative! Did you mean to add it to the opposite side?')
                    $('#myModal').modal("show");
                }
                else if(valueCred < 0){
                    $("#modalAlertSuccess").addClass("alert-danger")
                    $("#modalAlertSuccess").html('<strong>Error!</strong> Credit value cannot be negative! Did you mean to add it to the opposite side?')
                    $('#myModal').modal("show");
                }
                else if(valueCred == 0 && valueDeb == 0){
                    $("#modalAlertSuccess").addClass("alert-danger")
                    $("#modalAlertSuccess").html('<strong>Error!</strong> One of the entries must be non-zero!')
                    $('#myModal').modal("show");
                }
                else{
                    if(valueCred > 0){
                        if($("#DebitsList").val().includes(selected) || $("#CreditsList").val().includes(selected)){
                            $("#modalAlertSuccess").addClass("alert-danger")
                            $("#modalAlertSuccess").html('<strong>Error!</strong> This account is already used on the equation!')
                            $('#myModal').modal("show");               
                        }else{
                            var text = ' <div class="col-xs-12 alert-danger"><div class="col-xs-4 col-xs-offset-1" >  <a href="/chartofaccounts/accountdetails?accountname=' + selected + '">' + selected +' </a> </div> <div class="col-xs-1 col-xs-offset-3"> $ </div> <input style="text-align:right" class="creditsin col-xs-2" value="' + Math.abs(valueCred).toFixed(2) + '"><div class="col-xs-1"> <a onclick="remove(this)" class="Credit"> Remove </a> </div></div>'
                            $("#CreditsPart").append(text);
                            $("#CreditsList").val($("#CreditsList").val() + "," + selected)
                            $("#CreditsValues").val($("#CreditsValues").val() + "," + valueCred)
                        }
                    }
                    else{
                        if($("#DebitsList").val().includes(selected) || $("#CreditsList").val().includes(selected)){
                            $("#modalAlertSuccess").addClass("alert-danger")
                            $("#modalAlertSuccess").html('<strong>Error!</strong> This account is already used on the equation!')
                            $('#myModal').modal("show");       
                        
                        }else{
                            var text = ' <div class="col-xs-12 alert-success"><div class="col-xs-4"> <a href="/chartofaccounts/accountdetails?accountname=' + selected + '">' + selected + '</a> </div> <div class=col-xs-1> $ </div> <input class="col-xs-2 debitsin" style="text-align:right" value="' +  Math.abs(valueDeb).toFixed(2) + '"</div>  <div class="col-xs-1 col-xs-offset-4"> <a onclick="remove(this)" class="Debit">  Remove </a>  </div></div>'
                            $("#DebitsPart").append(text);
                            $("#DebitsList").val($("#DebitsList").val() + "," + selected)
                            $("#DebitsValues").val($("#DebitsValues").val() + "," + valueDeb)
                        }
                    }
                    $("#CreditInput").val("0.00");
                    $("#DebitInput").val("0.00");
                }
            }
            function remove(item){
                var accname = $(item).parent().siblings().first().text()
                var isDebit = $(item).hasClass("Debit")
                var jqueryentry = "div :contains(" + accname + ")";
                var entry = "," + accname.trim()
                var entry2 = "," + $(item).parent().prev().val().trim()
                $(jqueryentry).last().parent().remove()
                if(isDebit == true){
                    $("#DebitsList").val( $("#DebitsList").val().replace(entry, ""))
                    $("#DebitsValues").val( $("#DebitsValues").val().replace(entry2, ""))
                } else{
                    $("#CreditsList").val( $("#CreditsList").val().replace(entry, ""))
                    $("#CreditsValues").val( $("#CreditsValues").val().replace(entry2, ""))               
                }

            }
            function journalize() {
               var debits = $("#DebitsList").val().substring(1)
               var credits = $("#CreditsList").val().substring(1)
               var debitsval = $("#DebitsValues").val().substring(1)
               var creditsval = $("#CreditsValues").val().substring(1)
                if (debits && credits && debitsval && creditsval) {
                   $.ajax({
                       url: "/ChartOfAccounts/Journalize",
                       data: { credits: credits, debits: debits, creditsval: creditsval, debitsval: debitsval, isUpdate: updating, journalId: journalId  },
                       success: function (result) {
                           if (result.success == "1") {
                               $("#modalAlertSuccess").addClass("alert-success")
                               $("#modalAlertSuccess").removeClass("alert-danger")
                               $("#modalAlertSuccess").html('<strong>Success!</strong> Journalizing transaction completed.')
                               $('#myModal').modal("show");
                               $("#DebitsList").val("");
                               $("#CreditsList").val("");
                               $("#DebitsValues").val("");
                               $("#CreditsValues").val("");
                               $("#CreditsPart").html("");
                               $("#DebitsPart").html("");
                               $("#DebitsNumber").val("0");
                               $("#CreditsNumber").val("0");
                           }
                           else if (result.success == "-1") {
                               $("#modalAlertSuccess").addClass("alert-danger")
                               $("#modalAlertSuccess").removeClass("alert-success")
                               $("#modalAlertSuccess").html('<strong>Error!</strong> Journalizing transaction incompleted. Make sure that total debit and credit values are equal.')
                               $('#myModal').modal("show");
                           }
                       },
                   });
               }
               else {
                   $("#modalAlertSuccess").addClass("alert-danger")
                   $("#modalAlertSuccess").removeClass("alert-success")
                   $("#modalAlertSuccess").html('<strong>Error!</strong> Journalizing transaction incompleted. Make sure there it at least one account on debit and one account on credit.')
                   $('#myModal').modal("show");
                }
            }
        </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.12.2/js/bootstrap-select.min.js"></script>
        <script>
                $('.selectpicker').on('change', function(){
                    var selected = $(this).find("option:selected").val();
                    $.ajax({
                        url: "/chartofaccounts/getdata",
                        data: {accountname: selected},
                        success: function(result){
                            var isLeft = result.isLeftNormalSide;
                            if(isLeft){
                                $("#DebitInput").css("background-color", "#dff0d8")
                                $("#CreditInput").css("background-color", "#f2dede")
                            }
                            else{
                                $("#CreditInput").css("background-color", "#dff0d8")
                                $("#DebitInput").css("background-color", "#f2dede")
                            }
                        }
                    })
                });
        </script>
    }

}
